digraph g {
graph [ordering=out];
node [shape=circle];
n[label = "-"];
n0[label = "sqrt"];
n00[label = "+"];
n000[label = "*"];
n0000[label = "a"];
n000 -> n0000;
n0001[label = "a"];
n000 -> n0001;
n00 -> n000;
n001[label = "*"];
n0010[label = "b"];
n001 -> n0010;
n0011[label = "b"];
n001 -> n0011;
n00 -> n001;
n0 -> n00;
n -> n0;
n1[label = "sqrt"];
n10[label = "-"];
n100[label = "sqrt"];
n1000[label = "/"];
n10000[label = "/"];
n100000[label = "sqrt"];
n1000000[label = "/"];
n10000000[label = "/"];
n100000000[label = "/"];
n1000000000[label = "b"];
n100000000 -> n1000000000;
n1000000001[label = "+"];
n10000000010[label = "*"];
n100000000100[label = "a"];
n10000000010 -> n100000000100;
n100000000101[label = "*"];
n1000000001010[label = "b"];
n100000000101 -> n1000000001010;
n1000000001011[label = "b"];
n100000000101 -> n1000000001011;
n10000000010 -> n100000000101;
n1000000001 -> n10000000010;
n10000000011[label = "/"];
n100000000110[label = "-"];
n1000000001100[label = "/"];
n10000000011000[label = "-"];
n100000000110000[label = "-"];
n1000000001100000[label = "b"];
n100000000110000 -> n1000000001100000;
n1000000001100001[label = "a"];
n100000000110000 -> n1000000001100001;
n10000000011000 -> n100000000110000;
n100000000110001[label = "sqrt"];
n1000000001100010[label = "a"];
n100000000110001 -> n1000000001100010;
n10000000011000 -> n100000000110001;
n1000000001100 -> n10000000011000;
n10000000011001[label = "+"];
n100000000110010[label = "b"];
n10000000011001 -> n100000000110010;
n100000000110011[label = "b"];
n10000000011001 -> n100000000110011;
n1000000001100 -> n10000000011001;
n100000000110 -> n1000000001100;
n1000000001101[label = "sqrt"];
n10000000011010[label = "a"];
n1000000001101 -> n10000000011010;
n100000000110 -> n1000000001101;
n10000000011 -> n100000000110;
n100000000111[label = "sqrt"];
n1000000001110[label = "a"];
n100000000111 -> n1000000001110;
n10000000011 -> n100000000111;
n1000000001 -> n10000000011;
n100000000 -> n1000000001;
n10000000 -> n100000000;
n100000001[label = "sqrt"];
n1000000010[label = "*"];
n10000000100[label = "a"];
n1000000010 -> n10000000100;
n10000000101[label = "a"];
n1000000010 -> n10000000101;
n100000001 -> n1000000010;
n10000000 -> n100000001;
n1000000 -> n10000000;
n10000001[label = "-"];
n100000010[label = "/"];
n1000000100[label = "/"];
n10000001000[label = "sqrt"];
n100000010000[label = "+"];
n1000000100000[label = "+"];
n10000001000000[label = "a"];
n1000000100000 -> n10000001000000;
n10000001000001[label = "+"];
n100000010000010[label = "+"];
n1000000100000100[label = "a"];
n100000010000010 -> n1000000100000100;
n1000000100000101[label = "a"];
n100000010000010 -> n1000000100000101;
n10000001000001 -> n100000010000010;
n100000010000011[label = "*"];
n1000000100000110[label = "b"];
n100000010000011 -> n1000000100000110;
n1000000100000111[label = "b"];
n100000010000011 -> n1000000100000111;
n10000001000001 -> n100000010000011;
n1000000100000 -> n10000001000001;
n100000010000 -> n1000000100000;
n1000000100001[label = "sqrt"];
n10000001000010[label = "a"];
n1000000100001 -> n10000001000010;
n100000010000 -> n1000000100001;
n10000001000 -> n100000010000;
n1000000100 -> n10000001000;
n10000001001[label = "a"];
n1000000100 -> n10000001001;
n100000010 -> n1000000100;
n1000000101[label = "+"];
n10000001010[label = "/"];
n100000010100[label = "a"];
n10000001010 -> n100000010100;
n100000010101[label = "b"];
n10000001010 -> n100000010101;
n1000000101 -> n10000001010;
n10000001011[label = "sqrt"];
n100000010110[label = "sqrt"];
n1000000101100[label = "*"];
n10000001011000[label = "a"];
n1000000101100 -> n10000001011000;
n10000001011001[label = "a"];
n1000000101100 -> n10000001011001;
n100000010110 -> n1000000101100;
n10000001011 -> n100000010110;
n1000000101 -> n10000001011;
n100000010 -> n1000000101;
n10000001 -> n100000010;
n100000011[label = "*"];
n1000000110[label = "b"];
n100000011 -> n1000000110;
n1000000111[label = "b"];
n100000011 -> n1000000111;
n10000001 -> n100000011;
n1000000 -> n10000001;
n100000 -> n1000000;
n10000 -> n100000;
n100001[label = "*"];
n1000010[label = "b"];
n100001 -> n1000010;
n1000011[label = "b"];
n100001 -> n1000011;
n10000 -> n100001;
n1000 -> n10000;
n10001[label = "+"];
n100010[label = "*"];
n1000100[label = "sqrt"];
n10001000[label = "+"];
n100010000[label = "b"];
n10001000 -> n100010000;
n100010001[label = "a"];
n10001000 -> n100010001;
n1000100 -> n10001000;
n100010 -> n1000100;
n1000101[label = "b"];
n100010 -> n1000101;
n10001 -> n100010;
n100011[label = "*"];
n1000110[label = "a"];
n100011 -> n1000110;
n1000111[label = "-"];
n10001110[label = "+"];
n100011100[label = "+"];
n1000111000[label = "/"];
n10001110000[label = "*"];
n100011100000[label = "b"];
n10001110000 -> n100011100000;
n100011100001[label = "b"];
n10001110000 -> n100011100001;
n1000111000 -> n10001110000;
n10001110001[label = "-"];
n100011100010[label = "a"];
n10001110001 -> n100011100010;
n100011100011[label = "a"];
n10001110001 -> n100011100011;
n1000111000 -> n10001110001;
n100011100 -> n1000111000;
n1000111001[label = "+"];
n10001110010[label = "b"];
n1000111001 -> n10001110010;
n10001110011[label = "a"];
n1000111001 -> n10001110011;
n100011100 -> n1000111001;
n10001110 -> n100011100;
n100011101[label = "*"];
n1000111010[label = "b"];
n100011101 -> n1000111010;
n1000111011[label = "b"];
n100011101 -> n1000111011;
n10001110 -> n100011101;
n1000111 -> n10001110;
n10001111[label = "*"];
n100011110[label = "b"];
n10001111 -> n100011110;
n100011111[label = "b"];
n10001111 -> n100011111;
n1000111 -> n10001111;
n100011 -> n1000111;
n10001 -> n100011;
n1000 -> n10001;
n100 -> n1000;
n10 -> n100;
n101[label = "sqrt"];
n1010[label = "/"];
n10100[label = "/"];
n101000[label = "b"];
n10100 -> n101000;
n101001[label = "a"];
n10100 -> n101001;
n1010 -> n10100;
n10101[label = "+"];
n101010[label = "*"];
n1010100[label = "a"];
n101010 -> n1010100;
n1010101[label = "a"];
n101010 -> n1010101;
n10101 -> n101010;
n101011[label = "*"];
n1010110[label = "b"];
n101011 -> n1010110;
n1010111[label = "b"];
n101011 -> n1010111;
n10101 -> n101011;
n1010 -> n10101;
n101 -> n1010;
n10 -> n101;
n1 -> n10;
n -> n1;
}
